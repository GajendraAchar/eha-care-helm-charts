# Default values for eha-care.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""




ingress:
  annotations:
    cert-manager.io/acme-challenge-type: dns01
    cert-manager.io/acme-dns01-provider: route53
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    monitor.stakater.com/enabled: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 75M
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    statuscake.monitor.stakater.com/contact-group: DevOps
  enabled: false
  hosts:
  - chart-example.local
  path: /
  ssl:
    cert_secret: wildcard
    letsencrypt: true
nameOverride: null
nginx:
  config: |
    server {
      {{- if .Values.debug }}
      error_log /var/log/nginx/error.log info;
      {{- else }}
      access_log off;
      {{- end }}
      location /health {
        proxy_pass http://127.0.0.1:{{ .Values.app.port }};
      }
    }
    server {
      server_name {{ .Values.url }};
      {{- if .Values.debug }}
      error_log   /var/log/nginx/error.log info;
      {{- else }}
      access_log  off;
      {{- end }}
      # Max upload size
      client_max_body_size 75M;   # adjust to taste

      location {{ .Values.app.static_path }}/ {
        alias {{ .Values.app.static_root }};
      }
      # Finally, send all non-static requests to the Django server.
      location / {
        proxy_pass http://127.0.0.1:{{ .Values.app.port }};
        proxy_set_header        Host               $host;
        proxy_set_header        X-Real-IP          $remote_addr;
        proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Host   $host:443;
        proxy_set_header        X-Forwarded-Server $host;
        proxy_set_header        X-Forwarded-Port   443;
        proxy_set_header        X-Forwarded-Proto  https;
        include    /etc/nginx/uwsgi_params; # or the uwsgi_params you installed manually
      }
    }
  enabled: false



serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
